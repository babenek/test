#include <stdlib.h>
#include <stdio.h>

/*
1
2
3
4
5
6
*/

char s[6][8];

//------------------------------------------------------------------------------

int hashing(const char t[6][8])
{
	int hash=0;
	int sum=0;
	for (int n=0;n<6;++n)
	{
		if(t[n][1] == n) sum++;
		if(t[n][7] == n) sum++;
		if(t[n][3] == n) sum++;
		if(t[n][5] == n) sum++;
		
		for (int m=0;m<8;++m)
		{
			hash ^= (t[n][m])<<(n+m);
		}
	}
	return (((0x18&sum)<<11) | hash);
}

//------------------------------------------------------------------------------

bool turn(const int q)
{
	char t[6][8];	
	
	for (int n=0;n<6;++n)
	{
		if(q==n) 
			continue; 
		for (int m=0;m<8;++m)
			t[n][m] = s[n][m];
	}
	
	for(int n=0;n<8;++n)
	{
		t[q][n]=s[q][(n+6)%8];
	}
	
	switch(q)
	{
	case 0:
		t[1][0]=s[4][0];
		t[1][1]=s[4][1];
		t[1][2]=s[4][2];

		t[2][0]=s[1][0];
		t[2][1]=s[1][1];
		t[2][2]=s[1][2];

		t[3][0]=s[2][0];
		t[3][1]=s[2][1];
		t[3][2]=s[2][2];

		t[4][0]=s[3][0];
		t[4][1]=s[3][1];
		t[4][2]=s[3][2];
	break;
	
	case 1:
		t[0][0]=s[2][2];
		t[0][1]=s[2][3];
		t[0][2]=s[2][4];

		t[2][2]=s[5][2];
		t[2][3]=s[5][3];
		t[2][4]=s[5][4];

		t[4][0]=s[0][2];
		t[4][6]=s[0][0];
		t[4][7]=s[0][1];

		t[5][2]=s[4][6];
		t[5][3]=s[4][7];
		t[5][4]=s[4][0];
	break;
	
	case 2:
		t[0][2]=s[3][2];
		t[0][3]=s[3][3];
		t[0][4]=s[3][4];

		t[1][0]=s[0][4];
		t[1][6]=s[0][2];
		t[1][7]=s[0][3];

		t[3][2]=s[5][0];
		t[3][3]=s[5][1];
		t[3][4]=s[5][2];

		t[5][0]=s[1][6];
		t[5][1]=s[1][7];
		t[5][2]=s[1][0];
	break;
	
	case 3:
		t[0][4]=s[4][2];
		t[0][5]=s[4][3];
		t[0][6]=s[4][4];

		t[2][0]=s[0][6];
		t[2][6]=s[0][5];
		t[2][7]=s[0][4];

		t[4][2]=s[5][6];
		t[4][3]=s[5][7];
		t[4][4]=s[5][0];

		t[5][0]=s[2][0];
		t[5][6]=s[2][6];
		t[5][7]=s[2][7];
	break;
	
	case 4:
		t[0][0]=s[1][4];
		t[0][6]=s[1][3];
		t[0][7]=s[1][2];

		t[1][2]=s[5][4];
		t[1][3]=s[5][5];
		t[1][4]=s[5][6];

		t[3][0]=s[0][0];
		t[3][6]=s[0][6];
		t[3][7]=s[0][7];

		t[5][4]=s[3][6];
		t[5][5]=s[3][7];
		t[5][6]=s[3][0];
	break;
	
	case 5:
		t[1][4]=s[2][4];
		t[1][5]=s[2][5];
		t[1][6]=s[2][6];

		t[2][4]=s[3][4];
		t[2][5]=s[3][5];
		t[2][6]=s[3][6];

		t[3][4]=s[4][4];
		t[3][5]=s[4][5];
		t[3][6]=s[4][6];

		t[4][4]=s[1][4];
		t[4][5]=s[1][5];
		t[4][6]=s[1][6];
	break;
	}
	
	hashing(t);
	
	for (int n=0;n<6;++n)
		for (int m=0;m<8;++m)
			s[n][m] = t[n][m];
	
	return true;
}

//------------------------------------------------------------------------------

void init()
{
	for (int n=0;n<6;++n)
		for (int m=0;m<8;++m)
			s[n][m] = n;
}

//------------------------------------------------------------------------------

void print(const char t[6][8])
{
	printf("\n");
	for (int n=0;n<6;++n)
	{
		for (int m=0;m<8;++m)
			printf("%d",t[n][m]);
		if (5!=n) printf(" : ");
	}
}

//------------------------------------------------------------------------------

int main()
{
	init();
	hashing(s);
	//print(s);
	for(int n=0;n<32;++n){
		turn(random()%6);
		print(s);
		printf("   %d",hashing(s));
		}
	printf("\n");
	return 0;
}

//------------------------------------------------------------------------------
